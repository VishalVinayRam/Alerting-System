{
 "Resources": {
  "MyEventBus251E60F8": {
   "Type": "AWS::Events::EventBus",
   "Properties": {
    "Name": "EventBridgeLambdaStack123MyEventBusCF47993A"
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyEventBus/Resource"
   }
  },
  "MyLambdaServiceRole4539ECB6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyLambda/ServiceRole/Resource"
   }
  },
  "MyLambdaCCE802FB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "392fe9ac4077808c0a89df149cc80c68d531f38fcd66c50fe17b9f423f2439b5.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MyLambdaServiceRole4539ECB6",
      "Arn"
     ]
    },
    "Runtime": "python3.11"
   },
   "DependsOn": [
    "MyLambdaServiceRole4539ECB6"
   ],
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyLambda/Resource",
    "aws:asset:path": "asset.392fe9ac4077808c0a89df149cc80c68d531f38fcd66c50fe17b9f423f2439b5.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyRuleA44AB831": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "AWS Service Event Via CloudTrail"
     ],
     "detail": {
      "eventSource": [
       "secretsmanager.amazonaws.com"
      ],
      "eventName": [
       "DeleteSecret"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyLambdaCCE802FB",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyEventBus251E60F8",
        "Arn"
       ]
      },
      "Id": "Target1",
      "RoleArn": {
       "Fn::GetAtt": [
        "MyRuleEventsRoleF186CAE5",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyRule/Resource"
   }
  },
  "MyRuleAllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D21901CEB8030": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "MyRuleA44AB831",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyRule/AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190"
   }
  },
  "MyRuleEventsRoleF186CAE5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyRule/EventsRole/Resource"
   }
  },
  "MyRuleEventsRoleDefaultPolicy5D01F508": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEventBus251E60F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyRuleEventsRoleDefaultPolicy5D01F508",
    "Roles": [
     {
      "Ref": "MyRuleEventsRoleF186CAE5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/MyRule/EventsRole/DefaultPolicy/Resource"
   }
  },
  "Rule270732244": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "AWS API Call via CloudTrail"
     ],
     "detail": {
      "eventSource": [
       "iam.amazonaws.com"
      ],
      "eventName": [
       "DeleteUser",
       "CreateUser",
       "DeleteRole",
       "CreateRole",
       "DeleteRolePolicy",
       "PutRolePolicy",
       "DeletePolicy",
       "CreatePolicy"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyLambdaCCE802FB",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyEventBus251E60F8",
        "Arn"
       ]
      },
      "Id": "Target1",
      "RoleArn": {
       "Fn::GetAtt": [
        "Rule2EventsRoleAC64D76C",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule2/Resource"
   }
  },
  "Rule2AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190F1D25CBC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule270732244",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule2/AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190"
   }
  },
  "Rule2EventsRoleAC64D76C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule2/EventsRole/Resource"
   }
  },
  "Rule2EventsRoleDefaultPolicy988F86A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEventBus251E60F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Rule2EventsRoleDefaultPolicy988F86A6",
    "Roles": [
     {
      "Ref": "Rule2EventsRoleAC64D76C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule2/EventsRole/DefaultPolicy/Resource"
   }
  },
  "Rule37CF0D9CF": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "AWS API Call via CloudTrail"
     ],
     "detail": {
      "eventSource": [
       "rds.amazonaws.com"
      ],
      "eventName": [
       "StopDBInstance",
       "DeleteDBInstance"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyLambdaCCE802FB",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyEventBus251E60F8",
        "Arn"
       ]
      },
      "Id": "Target1",
      "RoleArn": {
       "Fn::GetAtt": [
        "Rule3EventsRole1F265F5C",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule3/Resource"
   }
  },
  "Rule3AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D219027A0C1AC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule37CF0D9CF",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule3/AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190"
   }
  },
  "Rule3EventsRole1F265F5C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule3/EventsRole/Resource"
   }
  },
  "Rule3EventsRoleDefaultPolicy69ED7C79": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEventBus251E60F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Rule3EventsRoleDefaultPolicy69ED7C79",
    "Roles": [
     {
      "Ref": "Rule3EventsRole1F265F5C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule3/EventsRole/DefaultPolicy/Resource"
   }
  },
  "Rule448524F36": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "AWS API Call via CloudTrail"
     ],
     "detail": {
      "eventSource": [
       "s3.amazonaws.com"
      ],
      "eventName": [
       "DeleteBucket"
      ],
      "requestParameters": {
       "bucketName": [
        {
         "prefix": "audit"
        }
       ]
      }
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyLambdaCCE802FB",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyEventBus251E60F8",
        "Arn"
       ]
      },
      "Id": "Target1",
      "RoleArn": {
       "Fn::GetAtt": [
        "Rule4EventsRoleE6762C83",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule4/Resource"
   }
  },
  "Rule4AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190A676D1B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule448524F36",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule4/AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190"
   }
  },
  "Rule4EventsRoleE6762C83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule4/EventsRole/Resource"
   }
  },
  "Rule4EventsRoleDefaultPolicy518D2238": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEventBus251E60F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Rule4EventsRoleDefaultPolicy518D2238",
    "Roles": [
     {
      "Ref": "Rule4EventsRoleE6762C83"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule4/EventsRole/DefaultPolicy/Resource"
   }
  },
  "Rule560B83267": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "AWS Service Event Via CloudTrail"
     ],
     "detail": {
      "eventSource": [
       "kms.amazonaws.com"
      ],
      "eventName": [
       "DisableKey",
       "EnableKey",
       "UpdateKeyDescription",
       "ScheduleKeyDeletion",
       "DeleteKey"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyLambdaCCE802FB",
        "Arn"
       ]
      },
      "Id": "Target0"
     },
     {
      "Arn": {
       "Fn::GetAtt": [
        "MyEventBus251E60F8",
        "Arn"
       ]
      },
      "Id": "Target1",
      "RoleArn": {
       "Fn::GetAtt": [
        "Rule5EventsRole6DAAFCE3",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule5/Resource"
   }
  },
  "Rule5AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190727EA833": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule560B83267",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule5/AllowEventRuleEventBridgeLambdaStack123MyLambdaAF2D2190"
   }
  },
  "Rule5EventsRole6DAAFCE3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule5/EventsRole/Resource"
   }
  },
  "Rule5EventsRoleDefaultPolicy15CDA129": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEventBus251E60F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Rule5EventsRoleDefaultPolicy15CDA129",
    "Roles": [
     {
      "Ref": "Rule5EventsRole6DAAFCE3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/Rule5/EventsRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02N3Q6CMAxGn8X7UUWeQIheG3gAU0c1FegSumnMwrubzZ94dU76tf22UFYVbFb40ML2QzHyGWLn0Q4GH3qKdCfxCnGfWAc1zUV+3oaR0iBxMSNO5x4hHoJYz05S8u9HmidWZSeLYZwgtu5znnh0I9tn3su2GK1OqEpeYZdgtII62IF8jUqLaUldmC2ZnHYeryzX/O4bNBdpnPTsc6W4nuCm6/t2A2UJ5eqmzMUcxPNE0L75Ak9w4qcPAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeLambdaStack123/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}